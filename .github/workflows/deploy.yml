name: Deploy Infrastructure and Apps

# should trigger on push to main branch or manually
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    outputs:
      bucket_name: ${{ steps.exports.outputs.BUCKET_NAME }}
      region: ${{ steps.exports.outputs.REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        id: terraform-apply

      - name: Exports
        id: exports
        working-directory: ./terraform
        run: |
          echo "BUCKET_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT
          echo "REGION=$(terraform output -raw region)" >> $GITHUB_OUTPUT

  build_and_deploy_react_app:
    needs: terraform
    name: Build and Deploy React App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install
        working-directory: ./apps/web-app

      - name: Build React App
        run: npm run build
        working-directory: ./apps/web-app

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.terraform.outputs.region }}

      - name: Deploy to S3
        run: aws s3 sync --delete build s3://${{ needs.terraform.outputs.bucket_name }}/
        working-directory: ./apps/web-app
